Exercice 1 
1)

usage : git config [<options>]

Emplacement du fichier de configuration
    --global              utiliser les fichier de configuration global
    --system              utiliser le fichier de configuration du système
    --local               utiliser le fichier de configuration du dépôt
    --worktree            utiliser un fichier de configuration par arbre de travail
    -f, --file <fichier>  utiliser le fichier de configuration spécifié
    --blob <blob-id>      lire la configuration depuis l'objet blob fourni

Action
    --get                 obtenir la valeur : nom [regex-de-valeur]
    --get-all             obtenir toutes les valeurs : clé [regex-de-valeur]
    --get-regexp          obtenir les valeur pour la regexp : regex-de-nom [regex-de-valeur]
    --get-urlmatch        obtenir la valeur spécifique pour l'URL : section[.var] URL
    --replace-all         remplacer toutes les variables correspondant : nom valeur [regex-de-valeur]
    --add                 ajouter une nouvelle variable : nom valeur
    --unset               supprimer une variable : nom [regex-de-valeur]
    --unset-all           supprimer toutes les correspondances nom [regex-de-valeur]
    --rename-section      renommer une section : ancien-nom nouveau-nom
    --remove-section      supprimer une section : nom
    -l, --list            afficher tout
    -e, --edit            ouvrir un éditeur
    --get-color           trouver la couleur configurée : slot [par défaut]
    --get-colorbool       trouver le réglage de la couleur : slot [stdout-est-tty]

Type
    -t, --type <>         ce type est assigné à la valeur
    --bool                la valeur est "true" (vrai) ou "false" (faux)
    --int                 la valeur est un nombre décimal
    --bool-or-int         la valeur est --bool ou --int
    --path                la valeur est un chemin (vers un fichier ou un répertoire)
    --expiry-date         la valeur est une date d'expiration

Autre
    -z, --null            terminer les valeurs avec un caractère NUL
    --name-only           n'afficher que les noms de variable
    --includes            respecter les directives d'inclusion lors de la recherche
    --show-origin         afficher l'origine de la configuration (fichier, entrée standard, blob, ligne de commande)
    --default <valeur>    avec --get, utiliser le valeur par défaut quand l'entrée n'existe pas
    
2)
Avec la commande git init j'ai crée le répertoire .git

3)mkdir Exo1
4)
Sur la branche master

Aucun commit

rien à valider (créez/copiez des fichiers et utilisez "git add" pour les suivre)

Ce message veut dire qu'on a pas ajouté le fichier et que pour le faire il faut saisir la commande git add .

5)
Sur la branche master

Aucun commit

Modifications qui seront validées :
  (utilisez "git rm --cached <fichier>..." pour désindexer)
	nouveau fichier : EI
6)Lorsqu'on saisit la commande il s'afffiche:

 [master (commit racine) 4b5b922] Un superMessage
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 Exo1/EI

7)le status est le suivant:

Sur la branche master
rien à valider, la copie de travail est propre

8) S'affiche l'auteur,le mail:

Author: boutkabderrahmane <Abderrahmane.Boutkayoud@etu.sorbonne-universite.fr>
Date:   Mon Nov 20 17:30:44 2023 +0100

    Un superMessage

diff --git a/Exo1/EI b/Exo1/EI
new file mode 100644
index 0000000..e69de29

9) s'affiche:

diff --git a/Exo1/EI b/Exo1/EI
index e69de29..640545c 100644
--- a/Exo1/EI
+++ b/Exo1/EI
@@ -0,0 +1,87 @@
+Exercice 1 
+1)
+
+usage : git config [<options>]
+
+Emplacement du fichier de configuration
+    --global              utiliser les fichier de configuration global
+    --system              utiliser le fichier de configuration du système
+    --local               utiliser le fichier de configuration du dépôt
+    --worktree            utiliser un fichier de configuration par arbre de travail
+    -f, --file <fichier>  utiliser le fichier de configuration spécifié
+    --blob <blob-id>      lire la configuration depuis l'objet blob fourni
+
+Action
+    --get                 obtenir la valeur : nom [regex-de-valeur]
+    --get-all             obtenir toutes les valeurs : clé [regex-de-valeur]
:

